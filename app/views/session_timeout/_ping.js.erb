var frequency = <%= frequency %> * 1000;
var warning = <%= warning %> * 1000;
var start = <%= start %> * 1000;
var warning_info = "<%= j render('session_timeout/warning', locals: { modal: modal }) %>";
var warningEl = document.getElementById('session-timeout-cntnr');
warningEl.insertAdjacentHTML('afterbegin', warning_info);

var modal = new window.LoginGov.Modal({ el: '#session-timeout-msg' });
var ping_timeout;

function ping() {
  var request = new XMLHttpRequest();
  request.open('GET', '/active', true);
  request.setRequestHeader('X-Requested-With', 'XMLHttpRequest');

  request.onload = function() {
    if (request.status >= 200 && request.status < 400) {
      success(JSON.parse(request.responseText));
    }
  };

  request.send();
  ping_timeout = setTimeout(ping, frequency)
}

function success(data) {
  var el = document.getElementById('session-timeout-msg'),
      cntnr = document.getElementById('session-timeout-cntnr');

  var time_remaining = data.remaining * 1000,
      time_timeout = new Date().getTime() + time_remaining,
      show_warning = time_remaining < warning

  if (!data.live) {
    window.LoginGov.autoLogout();
    return;
  }

  if (show_warning && !modal.shown) {
    modal.show();
    window.LoginGov.countdownTimer(
      document.getElementById('countdown'), time_remaining, time_timeout
    );
  }

  if (!show_warning && modal.shown) modal.hide();

  if (time_remaining < frequency){
    time_remaining = time_remaining < 0 ? 0 : time_remaining
    ping_timeout = setTimeout(ping, time_remaining)
  }
}

setTimeout(ping, start);
